// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ortools/constraint_solver/search_stats.proto

#include "ortools/constraint_solver/search_stats.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace operations_research {
constexpr LocalSearchStatistics_FirstSolutionStatistics::LocalSearchStatistics_FirstSolutionStatistics(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : strategy_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , duration_seconds_(0){}
struct LocalSearchStatistics_FirstSolutionStatisticsDefaultTypeInternal {
  constexpr LocalSearchStatistics_FirstSolutionStatisticsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~LocalSearchStatistics_FirstSolutionStatisticsDefaultTypeInternal() {}
  union {
    LocalSearchStatistics_FirstSolutionStatistics _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT LocalSearchStatistics_FirstSolutionStatisticsDefaultTypeInternal _LocalSearchStatistics_FirstSolutionStatistics_default_instance_;
constexpr LocalSearchStatistics_LocalSearchOperatorStatistics::LocalSearchStatistics_LocalSearchOperatorStatistics(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : local_search_operator_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , num_neighbors_(int64_t{0})
  , num_filtered_neighbors_(int64_t{0})
  , num_accepted_neighbors_(int64_t{0})
  , duration_seconds_(0){}
struct LocalSearchStatistics_LocalSearchOperatorStatisticsDefaultTypeInternal {
  constexpr LocalSearchStatistics_LocalSearchOperatorStatisticsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~LocalSearchStatistics_LocalSearchOperatorStatisticsDefaultTypeInternal() {}
  union {
    LocalSearchStatistics_LocalSearchOperatorStatistics _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT LocalSearchStatistics_LocalSearchOperatorStatisticsDefaultTypeInternal _LocalSearchStatistics_LocalSearchOperatorStatistics_default_instance_;
constexpr LocalSearchStatistics_LocalSearchFilterStatistics::LocalSearchStatistics_LocalSearchFilterStatistics(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : local_search_filter_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , num_calls_(int64_t{0})
  , num_rejects_(int64_t{0})
  , duration_seconds_(0){}
struct LocalSearchStatistics_LocalSearchFilterStatisticsDefaultTypeInternal {
  constexpr LocalSearchStatistics_LocalSearchFilterStatisticsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~LocalSearchStatistics_LocalSearchFilterStatisticsDefaultTypeInternal() {}
  union {
    LocalSearchStatistics_LocalSearchFilterStatistics _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT LocalSearchStatistics_LocalSearchFilterStatisticsDefaultTypeInternal _LocalSearchStatistics_LocalSearchFilterStatistics_default_instance_;
constexpr LocalSearchStatistics::LocalSearchStatistics(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : local_search_operator_statistics_()
  , local_search_filter_statistics_()
  , first_solution_statistics_()
  , total_num_neighbors_(int64_t{0})
  , total_num_filtered_neighbors_(int64_t{0})
  , total_num_accepted_neighbors_(int64_t{0}){}
struct LocalSearchStatisticsDefaultTypeInternal {
  constexpr LocalSearchStatisticsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~LocalSearchStatisticsDefaultTypeInternal() {}
  union {
    LocalSearchStatistics _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT LocalSearchStatisticsDefaultTypeInternal _LocalSearchStatistics_default_instance_;
constexpr ConstraintSolverStatistics::ConstraintSolverStatistics(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : num_branches_(int64_t{0})
  , num_failures_(int64_t{0})
  , num_solutions_(int64_t{0})
  , bytes_used_(int64_t{0})
  , duration_seconds_(0){}
struct ConstraintSolverStatisticsDefaultTypeInternal {
  constexpr ConstraintSolverStatisticsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~ConstraintSolverStatisticsDefaultTypeInternal() {}
  union {
    ConstraintSolverStatistics _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ConstraintSolverStatisticsDefaultTypeInternal _ConstraintSolverStatistics_default_instance_;
constexpr SearchStatistics::SearchStatistics(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : local_search_statistics_(nullptr)
  , constraint_solver_statistics_(nullptr){}
struct SearchStatisticsDefaultTypeInternal {
  constexpr SearchStatisticsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~SearchStatisticsDefaultTypeInternal() {}
  union {
    SearchStatistics _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT SearchStatisticsDefaultTypeInternal _SearchStatistics_default_instance_;
}  // namespace operations_research
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_ortools_2fconstraint_5fsolver_2fsearch_5fstats_2eproto[6];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_ortools_2fconstraint_5fsolver_2fsearch_5fstats_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_ortools_2fconstraint_5fsolver_2fsearch_5fstats_2eproto = nullptr;

const uint32_t TableStruct_ortools_2fconstraint_5fsolver_2fsearch_5fstats_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::operations_research::LocalSearchStatistics_FirstSolutionStatistics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::operations_research::LocalSearchStatistics_FirstSolutionStatistics, strategy_),
  PROTOBUF_FIELD_OFFSET(::operations_research::LocalSearchStatistics_FirstSolutionStatistics, duration_seconds_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::operations_research::LocalSearchStatistics_LocalSearchOperatorStatistics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::operations_research::LocalSearchStatistics_LocalSearchOperatorStatistics, local_search_operator_),
  PROTOBUF_FIELD_OFFSET(::operations_research::LocalSearchStatistics_LocalSearchOperatorStatistics, num_neighbors_),
  PROTOBUF_FIELD_OFFSET(::operations_research::LocalSearchStatistics_LocalSearchOperatorStatistics, num_filtered_neighbors_),
  PROTOBUF_FIELD_OFFSET(::operations_research::LocalSearchStatistics_LocalSearchOperatorStatistics, num_accepted_neighbors_),
  PROTOBUF_FIELD_OFFSET(::operations_research::LocalSearchStatistics_LocalSearchOperatorStatistics, duration_seconds_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::operations_research::LocalSearchStatistics_LocalSearchFilterStatistics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::operations_research::LocalSearchStatistics_LocalSearchFilterStatistics, local_search_filter_),
  PROTOBUF_FIELD_OFFSET(::operations_research::LocalSearchStatistics_LocalSearchFilterStatistics, num_calls_),
  PROTOBUF_FIELD_OFFSET(::operations_research::LocalSearchStatistics_LocalSearchFilterStatistics, num_rejects_),
  PROTOBUF_FIELD_OFFSET(::operations_research::LocalSearchStatistics_LocalSearchFilterStatistics, duration_seconds_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::operations_research::LocalSearchStatistics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::operations_research::LocalSearchStatistics, first_solution_statistics_),
  PROTOBUF_FIELD_OFFSET(::operations_research::LocalSearchStatistics, local_search_operator_statistics_),
  PROTOBUF_FIELD_OFFSET(::operations_research::LocalSearchStatistics, local_search_filter_statistics_),
  PROTOBUF_FIELD_OFFSET(::operations_research::LocalSearchStatistics, total_num_neighbors_),
  PROTOBUF_FIELD_OFFSET(::operations_research::LocalSearchStatistics, total_num_filtered_neighbors_),
  PROTOBUF_FIELD_OFFSET(::operations_research::LocalSearchStatistics, total_num_accepted_neighbors_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::operations_research::ConstraintSolverStatistics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::operations_research::ConstraintSolverStatistics, num_branches_),
  PROTOBUF_FIELD_OFFSET(::operations_research::ConstraintSolverStatistics, num_failures_),
  PROTOBUF_FIELD_OFFSET(::operations_research::ConstraintSolverStatistics, num_solutions_),
  PROTOBUF_FIELD_OFFSET(::operations_research::ConstraintSolverStatistics, bytes_used_),
  PROTOBUF_FIELD_OFFSET(::operations_research::ConstraintSolverStatistics, duration_seconds_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::operations_research::SearchStatistics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::operations_research::SearchStatistics, local_search_statistics_),
  PROTOBUF_FIELD_OFFSET(::operations_research::SearchStatistics, constraint_solver_statistics_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::operations_research::LocalSearchStatistics_FirstSolutionStatistics)},
  { 8, -1, -1, sizeof(::operations_research::LocalSearchStatistics_LocalSearchOperatorStatistics)},
  { 19, -1, -1, sizeof(::operations_research::LocalSearchStatistics_LocalSearchFilterStatistics)},
  { 29, -1, -1, sizeof(::operations_research::LocalSearchStatistics)},
  { 41, -1, -1, sizeof(::operations_research::ConstraintSolverStatistics)},
  { 52, -1, -1, sizeof(::operations_research::SearchStatistics)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::operations_research::_LocalSearchStatistics_FirstSolutionStatistics_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::operations_research::_LocalSearchStatistics_LocalSearchOperatorStatistics_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::operations_research::_LocalSearchStatistics_LocalSearchFilterStatistics_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::operations_research::_LocalSearchStatistics_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::operations_research::_ConstraintSolverStatistics_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::operations_research::_SearchStatistics_default_instance_),
};

const char descriptor_table_protodef_ortools_2fconstraint_5fsolver_2fsearch_5fstats_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n,ortools/constraint_solver/search_stats"
  ".proto\022\023operations_research\"\302\006\n\025LocalSea"
  "rchStatistics\022e\n\031first_solution_statisti"
  "cs\030\006 \003(\0132B.operations_research.LocalSear"
  "chStatistics.FirstSolutionStatistics\022r\n "
  "local_search_operator_statistics\030\001 \003(\0132H"
  ".operations_research.LocalSearchStatisti"
  "cs.LocalSearchOperatorStatistics\022n\n\036loca"
  "l_search_filter_statistics\030\002 \003(\0132F.opera"
  "tions_research.LocalSearchStatistics.Loc"
  "alSearchFilterStatistics\022\033\n\023total_num_ne"
  "ighbors\030\003 \001(\003\022$\n\034total_num_filtered_neig"
  "hbors\030\004 \001(\003\022$\n\034total_num_accepted_neighb"
  "ors\030\005 \001(\003\032E\n\027FirstSolutionStatistics\022\020\n\010"
  "strategy\030\001 \001(\t\022\030\n\020duration_seconds\030\002 \001(\001"
  "\032\257\001\n\035LocalSearchOperatorStatistics\022\035\n\025lo"
  "cal_search_operator\030\001 \001(\t\022\025\n\rnum_neighbo"
  "rs\030\002 \001(\003\022\036\n\026num_filtered_neighbors\030\003 \001(\003"
  "\022\036\n\026num_accepted_neighbors\030\004 \001(\003\022\030\n\020dura"
  "tion_seconds\030\005 \001(\001\032|\n\033LocalSearchFilterS"
  "tatistics\022\033\n\023local_search_filter\030\001 \001(\t\022\021"
  "\n\tnum_calls\030\002 \001(\003\022\023\n\013num_rejects\030\003 \001(\003\022\030"
  "\n\020duration_seconds\030\004 \001(\001\"\215\001\n\032ConstraintS"
  "olverStatistics\022\024\n\014num_branches\030\001 \001(\003\022\024\n"
  "\014num_failures\030\002 \001(\003\022\025\n\rnum_solutions\030\003 \001"
  "(\003\022\022\n\nbytes_used\030\004 \001(\003\022\030\n\020duration_secon"
  "ds\030\005 \001(\001\"\266\001\n\020SearchStatistics\022K\n\027local_s"
  "earch_statistics\030\001 \001(\0132*.operations_rese"
  "arch.LocalSearchStatistics\022U\n\034constraint"
  "_solver_statistics\030\002 \001(\0132/.operations_re"
  "search.ConstraintSolverStatisticsBI\n#com"
  ".google.ortools.constraintsolverP\001\252\002\037Goo"
  "gle.OrTools.ConstraintSolverb\006proto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_ortools_2fconstraint_5fsolver_2fsearch_5fstats_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ortools_2fconstraint_5fsolver_2fsearch_5fstats_2eproto = {
  false, false, 1316, descriptor_table_protodef_ortools_2fconstraint_5fsolver_2fsearch_5fstats_2eproto, "ortools/constraint_solver/search_stats.proto", 
  &descriptor_table_ortools_2fconstraint_5fsolver_2fsearch_5fstats_2eproto_once, nullptr, 0, 6,
  schemas, file_default_instances, TableStruct_ortools_2fconstraint_5fsolver_2fsearch_5fstats_2eproto::offsets,
  file_level_metadata_ortools_2fconstraint_5fsolver_2fsearch_5fstats_2eproto, file_level_enum_descriptors_ortools_2fconstraint_5fsolver_2fsearch_5fstats_2eproto, file_level_service_descriptors_ortools_2fconstraint_5fsolver_2fsearch_5fstats_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_ortools_2fconstraint_5fsolver_2fsearch_5fstats_2eproto_getter() {
  return &descriptor_table_ortools_2fconstraint_5fsolver_2fsearch_5fstats_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_ortools_2fconstraint_5fsolver_2fsearch_5fstats_2eproto(&descriptor_table_ortools_2fconstraint_5fsolver_2fsearch_5fstats_2eproto);
namespace operations_research {

// ===================================================================

class LocalSearchStatistics_FirstSolutionStatistics::_Internal {
 public:
};

LocalSearchStatistics_FirstSolutionStatistics::LocalSearchStatistics_FirstSolutionStatistics(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:operations_research.LocalSearchStatistics.FirstSolutionStatistics)
}
LocalSearchStatistics_FirstSolutionStatistics::LocalSearchStatistics_FirstSolutionStatistics(const LocalSearchStatistics_FirstSolutionStatistics& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  strategy_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    strategy_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_strategy().empty()) {
    strategy_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_strategy(), 
      GetArenaForAllocation());
  }
  duration_seconds_ = from.duration_seconds_;
  // @@protoc_insertion_point(copy_constructor:operations_research.LocalSearchStatistics.FirstSolutionStatistics)
}

inline void LocalSearchStatistics_FirstSolutionStatistics::SharedCtor() {
strategy_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  strategy_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
duration_seconds_ = 0;
}

LocalSearchStatistics_FirstSolutionStatistics::~LocalSearchStatistics_FirstSolutionStatistics() {
  // @@protoc_insertion_point(destructor:operations_research.LocalSearchStatistics.FirstSolutionStatistics)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void LocalSearchStatistics_FirstSolutionStatistics::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  strategy_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void LocalSearchStatistics_FirstSolutionStatistics::ArenaDtor(void* object) {
  LocalSearchStatistics_FirstSolutionStatistics* _this = reinterpret_cast< LocalSearchStatistics_FirstSolutionStatistics* >(object);
  (void)_this;
}
void LocalSearchStatistics_FirstSolutionStatistics::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LocalSearchStatistics_FirstSolutionStatistics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LocalSearchStatistics_FirstSolutionStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:operations_research.LocalSearchStatistics.FirstSolutionStatistics)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  strategy_.ClearToEmpty();
  duration_seconds_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LocalSearchStatistics_FirstSolutionStatistics::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string strategy = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_strategy();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "operations_research.LocalSearchStatistics.FirstSolutionStatistics.strategy"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // double duration_seconds = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 17)) {
          duration_seconds_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LocalSearchStatistics_FirstSolutionStatistics::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:operations_research.LocalSearchStatistics.FirstSolutionStatistics)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string strategy = 1;
  if (!this->_internal_strategy().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_strategy().data(), static_cast<int>(this->_internal_strategy().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "operations_research.LocalSearchStatistics.FirstSolutionStatistics.strategy");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_strategy(), target);
  }

  // double duration_seconds = 2;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_duration_seconds = this->_internal_duration_seconds();
  uint64_t raw_duration_seconds;
  memcpy(&raw_duration_seconds, &tmp_duration_seconds, sizeof(tmp_duration_seconds));
  if (raw_duration_seconds != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_duration_seconds(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:operations_research.LocalSearchStatistics.FirstSolutionStatistics)
  return target;
}

size_t LocalSearchStatistics_FirstSolutionStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:operations_research.LocalSearchStatistics.FirstSolutionStatistics)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string strategy = 1;
  if (!this->_internal_strategy().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_strategy());
  }

  // double duration_seconds = 2;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_duration_seconds = this->_internal_duration_seconds();
  uint64_t raw_duration_seconds;
  memcpy(&raw_duration_seconds, &tmp_duration_seconds, sizeof(tmp_duration_seconds));
  if (raw_duration_seconds != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LocalSearchStatistics_FirstSolutionStatistics::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    LocalSearchStatistics_FirstSolutionStatistics::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LocalSearchStatistics_FirstSolutionStatistics::GetClassData() const { return &_class_data_; }

void LocalSearchStatistics_FirstSolutionStatistics::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<LocalSearchStatistics_FirstSolutionStatistics *>(to)->MergeFrom(
      static_cast<const LocalSearchStatistics_FirstSolutionStatistics &>(from));
}


void LocalSearchStatistics_FirstSolutionStatistics::MergeFrom(const LocalSearchStatistics_FirstSolutionStatistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:operations_research.LocalSearchStatistics.FirstSolutionStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_strategy().empty()) {
    _internal_set_strategy(from._internal_strategy());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_duration_seconds = from._internal_duration_seconds();
  uint64_t raw_duration_seconds;
  memcpy(&raw_duration_seconds, &tmp_duration_seconds, sizeof(tmp_duration_seconds));
  if (raw_duration_seconds != 0) {
    _internal_set_duration_seconds(from._internal_duration_seconds());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LocalSearchStatistics_FirstSolutionStatistics::CopyFrom(const LocalSearchStatistics_FirstSolutionStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:operations_research.LocalSearchStatistics.FirstSolutionStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocalSearchStatistics_FirstSolutionStatistics::IsInitialized() const {
  return true;
}

void LocalSearchStatistics_FirstSolutionStatistics::InternalSwap(LocalSearchStatistics_FirstSolutionStatistics* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &strategy_, lhs_arena,
      &other->strategy_, rhs_arena
  );
  swap(duration_seconds_, other->duration_seconds_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LocalSearchStatistics_FirstSolutionStatistics::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_ortools_2fconstraint_5fsolver_2fsearch_5fstats_2eproto_getter, &descriptor_table_ortools_2fconstraint_5fsolver_2fsearch_5fstats_2eproto_once,
      file_level_metadata_ortools_2fconstraint_5fsolver_2fsearch_5fstats_2eproto[0]);
}

// ===================================================================

class LocalSearchStatistics_LocalSearchOperatorStatistics::_Internal {
 public:
};

LocalSearchStatistics_LocalSearchOperatorStatistics::LocalSearchStatistics_LocalSearchOperatorStatistics(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:operations_research.LocalSearchStatistics.LocalSearchOperatorStatistics)
}
LocalSearchStatistics_LocalSearchOperatorStatistics::LocalSearchStatistics_LocalSearchOperatorStatistics(const LocalSearchStatistics_LocalSearchOperatorStatistics& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  local_search_operator_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    local_search_operator_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_local_search_operator().empty()) {
    local_search_operator_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_local_search_operator(), 
      GetArenaForAllocation());
  }
  ::memcpy(&num_neighbors_, &from.num_neighbors_,
    static_cast<size_t>(reinterpret_cast<char*>(&duration_seconds_) -
    reinterpret_cast<char*>(&num_neighbors_)) + sizeof(duration_seconds_));
  // @@protoc_insertion_point(copy_constructor:operations_research.LocalSearchStatistics.LocalSearchOperatorStatistics)
}

inline void LocalSearchStatistics_LocalSearchOperatorStatistics::SharedCtor() {
local_search_operator_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  local_search_operator_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&num_neighbors_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&duration_seconds_) -
    reinterpret_cast<char*>(&num_neighbors_)) + sizeof(duration_seconds_));
}

LocalSearchStatistics_LocalSearchOperatorStatistics::~LocalSearchStatistics_LocalSearchOperatorStatistics() {
  // @@protoc_insertion_point(destructor:operations_research.LocalSearchStatistics.LocalSearchOperatorStatistics)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void LocalSearchStatistics_LocalSearchOperatorStatistics::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  local_search_operator_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void LocalSearchStatistics_LocalSearchOperatorStatistics::ArenaDtor(void* object) {
  LocalSearchStatistics_LocalSearchOperatorStatistics* _this = reinterpret_cast< LocalSearchStatistics_LocalSearchOperatorStatistics* >(object);
  (void)_this;
}
void LocalSearchStatistics_LocalSearchOperatorStatistics::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LocalSearchStatistics_LocalSearchOperatorStatistics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LocalSearchStatistics_LocalSearchOperatorStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:operations_research.LocalSearchStatistics.LocalSearchOperatorStatistics)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  local_search_operator_.ClearToEmpty();
  ::memset(&num_neighbors_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&duration_seconds_) -
      reinterpret_cast<char*>(&num_neighbors_)) + sizeof(duration_seconds_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LocalSearchStatistics_LocalSearchOperatorStatistics::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string local_search_operator = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_local_search_operator();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "operations_research.LocalSearchStatistics.LocalSearchOperatorStatistics.local_search_operator"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 num_neighbors = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          num_neighbors_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 num_filtered_neighbors = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          num_filtered_neighbors_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 num_accepted_neighbors = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          num_accepted_neighbors_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // double duration_seconds = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 41)) {
          duration_seconds_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LocalSearchStatistics_LocalSearchOperatorStatistics::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:operations_research.LocalSearchStatistics.LocalSearchOperatorStatistics)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string local_search_operator = 1;
  if (!this->_internal_local_search_operator().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_local_search_operator().data(), static_cast<int>(this->_internal_local_search_operator().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "operations_research.LocalSearchStatistics.LocalSearchOperatorStatistics.local_search_operator");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_local_search_operator(), target);
  }

  // int64 num_neighbors = 2;
  if (this->_internal_num_neighbors() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_num_neighbors(), target);
  }

  // int64 num_filtered_neighbors = 3;
  if (this->_internal_num_filtered_neighbors() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_num_filtered_neighbors(), target);
  }

  // int64 num_accepted_neighbors = 4;
  if (this->_internal_num_accepted_neighbors() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_num_accepted_neighbors(), target);
  }

  // double duration_seconds = 5;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_duration_seconds = this->_internal_duration_seconds();
  uint64_t raw_duration_seconds;
  memcpy(&raw_duration_seconds, &tmp_duration_seconds, sizeof(tmp_duration_seconds));
  if (raw_duration_seconds != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(5, this->_internal_duration_seconds(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:operations_research.LocalSearchStatistics.LocalSearchOperatorStatistics)
  return target;
}

size_t LocalSearchStatistics_LocalSearchOperatorStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:operations_research.LocalSearchStatistics.LocalSearchOperatorStatistics)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string local_search_operator = 1;
  if (!this->_internal_local_search_operator().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_local_search_operator());
  }

  // int64 num_neighbors = 2;
  if (this->_internal_num_neighbors() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_num_neighbors());
  }

  // int64 num_filtered_neighbors = 3;
  if (this->_internal_num_filtered_neighbors() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_num_filtered_neighbors());
  }

  // int64 num_accepted_neighbors = 4;
  if (this->_internal_num_accepted_neighbors() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_num_accepted_neighbors());
  }

  // double duration_seconds = 5;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_duration_seconds = this->_internal_duration_seconds();
  uint64_t raw_duration_seconds;
  memcpy(&raw_duration_seconds, &tmp_duration_seconds, sizeof(tmp_duration_seconds));
  if (raw_duration_seconds != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LocalSearchStatistics_LocalSearchOperatorStatistics::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    LocalSearchStatistics_LocalSearchOperatorStatistics::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LocalSearchStatistics_LocalSearchOperatorStatistics::GetClassData() const { return &_class_data_; }

void LocalSearchStatistics_LocalSearchOperatorStatistics::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<LocalSearchStatistics_LocalSearchOperatorStatistics *>(to)->MergeFrom(
      static_cast<const LocalSearchStatistics_LocalSearchOperatorStatistics &>(from));
}


void LocalSearchStatistics_LocalSearchOperatorStatistics::MergeFrom(const LocalSearchStatistics_LocalSearchOperatorStatistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:operations_research.LocalSearchStatistics.LocalSearchOperatorStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_local_search_operator().empty()) {
    _internal_set_local_search_operator(from._internal_local_search_operator());
  }
  if (from._internal_num_neighbors() != 0) {
    _internal_set_num_neighbors(from._internal_num_neighbors());
  }
  if (from._internal_num_filtered_neighbors() != 0) {
    _internal_set_num_filtered_neighbors(from._internal_num_filtered_neighbors());
  }
  if (from._internal_num_accepted_neighbors() != 0) {
    _internal_set_num_accepted_neighbors(from._internal_num_accepted_neighbors());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_duration_seconds = from._internal_duration_seconds();
  uint64_t raw_duration_seconds;
  memcpy(&raw_duration_seconds, &tmp_duration_seconds, sizeof(tmp_duration_seconds));
  if (raw_duration_seconds != 0) {
    _internal_set_duration_seconds(from._internal_duration_seconds());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LocalSearchStatistics_LocalSearchOperatorStatistics::CopyFrom(const LocalSearchStatistics_LocalSearchOperatorStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:operations_research.LocalSearchStatistics.LocalSearchOperatorStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocalSearchStatistics_LocalSearchOperatorStatistics::IsInitialized() const {
  return true;
}

void LocalSearchStatistics_LocalSearchOperatorStatistics::InternalSwap(LocalSearchStatistics_LocalSearchOperatorStatistics* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &local_search_operator_, lhs_arena,
      &other->local_search_operator_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LocalSearchStatistics_LocalSearchOperatorStatistics, duration_seconds_)
      + sizeof(LocalSearchStatistics_LocalSearchOperatorStatistics::duration_seconds_)
      - PROTOBUF_FIELD_OFFSET(LocalSearchStatistics_LocalSearchOperatorStatistics, num_neighbors_)>(
          reinterpret_cast<char*>(&num_neighbors_),
          reinterpret_cast<char*>(&other->num_neighbors_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LocalSearchStatistics_LocalSearchOperatorStatistics::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_ortools_2fconstraint_5fsolver_2fsearch_5fstats_2eproto_getter, &descriptor_table_ortools_2fconstraint_5fsolver_2fsearch_5fstats_2eproto_once,
      file_level_metadata_ortools_2fconstraint_5fsolver_2fsearch_5fstats_2eproto[1]);
}

// ===================================================================

class LocalSearchStatistics_LocalSearchFilterStatistics::_Internal {
 public:
};

LocalSearchStatistics_LocalSearchFilterStatistics::LocalSearchStatistics_LocalSearchFilterStatistics(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:operations_research.LocalSearchStatistics.LocalSearchFilterStatistics)
}
LocalSearchStatistics_LocalSearchFilterStatistics::LocalSearchStatistics_LocalSearchFilterStatistics(const LocalSearchStatistics_LocalSearchFilterStatistics& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  local_search_filter_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    local_search_filter_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_local_search_filter().empty()) {
    local_search_filter_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_local_search_filter(), 
      GetArenaForAllocation());
  }
  ::memcpy(&num_calls_, &from.num_calls_,
    static_cast<size_t>(reinterpret_cast<char*>(&duration_seconds_) -
    reinterpret_cast<char*>(&num_calls_)) + sizeof(duration_seconds_));
  // @@protoc_insertion_point(copy_constructor:operations_research.LocalSearchStatistics.LocalSearchFilterStatistics)
}

inline void LocalSearchStatistics_LocalSearchFilterStatistics::SharedCtor() {
local_search_filter_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  local_search_filter_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&num_calls_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&duration_seconds_) -
    reinterpret_cast<char*>(&num_calls_)) + sizeof(duration_seconds_));
}

LocalSearchStatistics_LocalSearchFilterStatistics::~LocalSearchStatistics_LocalSearchFilterStatistics() {
  // @@protoc_insertion_point(destructor:operations_research.LocalSearchStatistics.LocalSearchFilterStatistics)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void LocalSearchStatistics_LocalSearchFilterStatistics::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  local_search_filter_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void LocalSearchStatistics_LocalSearchFilterStatistics::ArenaDtor(void* object) {
  LocalSearchStatistics_LocalSearchFilterStatistics* _this = reinterpret_cast< LocalSearchStatistics_LocalSearchFilterStatistics* >(object);
  (void)_this;
}
void LocalSearchStatistics_LocalSearchFilterStatistics::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LocalSearchStatistics_LocalSearchFilterStatistics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LocalSearchStatistics_LocalSearchFilterStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:operations_research.LocalSearchStatistics.LocalSearchFilterStatistics)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  local_search_filter_.ClearToEmpty();
  ::memset(&num_calls_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&duration_seconds_) -
      reinterpret_cast<char*>(&num_calls_)) + sizeof(duration_seconds_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LocalSearchStatistics_LocalSearchFilterStatistics::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string local_search_filter = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_local_search_filter();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "operations_research.LocalSearchStatistics.LocalSearchFilterStatistics.local_search_filter"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 num_calls = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          num_calls_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 num_rejects = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          num_rejects_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // double duration_seconds = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 33)) {
          duration_seconds_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LocalSearchStatistics_LocalSearchFilterStatistics::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:operations_research.LocalSearchStatistics.LocalSearchFilterStatistics)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string local_search_filter = 1;
  if (!this->_internal_local_search_filter().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_local_search_filter().data(), static_cast<int>(this->_internal_local_search_filter().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "operations_research.LocalSearchStatistics.LocalSearchFilterStatistics.local_search_filter");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_local_search_filter(), target);
  }

  // int64 num_calls = 2;
  if (this->_internal_num_calls() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_num_calls(), target);
  }

  // int64 num_rejects = 3;
  if (this->_internal_num_rejects() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_num_rejects(), target);
  }

  // double duration_seconds = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_duration_seconds = this->_internal_duration_seconds();
  uint64_t raw_duration_seconds;
  memcpy(&raw_duration_seconds, &tmp_duration_seconds, sizeof(tmp_duration_seconds));
  if (raw_duration_seconds != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_duration_seconds(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:operations_research.LocalSearchStatistics.LocalSearchFilterStatistics)
  return target;
}

size_t LocalSearchStatistics_LocalSearchFilterStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:operations_research.LocalSearchStatistics.LocalSearchFilterStatistics)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string local_search_filter = 1;
  if (!this->_internal_local_search_filter().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_local_search_filter());
  }

  // int64 num_calls = 2;
  if (this->_internal_num_calls() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_num_calls());
  }

  // int64 num_rejects = 3;
  if (this->_internal_num_rejects() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_num_rejects());
  }

  // double duration_seconds = 4;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_duration_seconds = this->_internal_duration_seconds();
  uint64_t raw_duration_seconds;
  memcpy(&raw_duration_seconds, &tmp_duration_seconds, sizeof(tmp_duration_seconds));
  if (raw_duration_seconds != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LocalSearchStatistics_LocalSearchFilterStatistics::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    LocalSearchStatistics_LocalSearchFilterStatistics::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LocalSearchStatistics_LocalSearchFilterStatistics::GetClassData() const { return &_class_data_; }

void LocalSearchStatistics_LocalSearchFilterStatistics::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<LocalSearchStatistics_LocalSearchFilterStatistics *>(to)->MergeFrom(
      static_cast<const LocalSearchStatistics_LocalSearchFilterStatistics &>(from));
}


void LocalSearchStatistics_LocalSearchFilterStatistics::MergeFrom(const LocalSearchStatistics_LocalSearchFilterStatistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:operations_research.LocalSearchStatistics.LocalSearchFilterStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_local_search_filter().empty()) {
    _internal_set_local_search_filter(from._internal_local_search_filter());
  }
  if (from._internal_num_calls() != 0) {
    _internal_set_num_calls(from._internal_num_calls());
  }
  if (from._internal_num_rejects() != 0) {
    _internal_set_num_rejects(from._internal_num_rejects());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_duration_seconds = from._internal_duration_seconds();
  uint64_t raw_duration_seconds;
  memcpy(&raw_duration_seconds, &tmp_duration_seconds, sizeof(tmp_duration_seconds));
  if (raw_duration_seconds != 0) {
    _internal_set_duration_seconds(from._internal_duration_seconds());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LocalSearchStatistics_LocalSearchFilterStatistics::CopyFrom(const LocalSearchStatistics_LocalSearchFilterStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:operations_research.LocalSearchStatistics.LocalSearchFilterStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocalSearchStatistics_LocalSearchFilterStatistics::IsInitialized() const {
  return true;
}

void LocalSearchStatistics_LocalSearchFilterStatistics::InternalSwap(LocalSearchStatistics_LocalSearchFilterStatistics* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &local_search_filter_, lhs_arena,
      &other->local_search_filter_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LocalSearchStatistics_LocalSearchFilterStatistics, duration_seconds_)
      + sizeof(LocalSearchStatistics_LocalSearchFilterStatistics::duration_seconds_)
      - PROTOBUF_FIELD_OFFSET(LocalSearchStatistics_LocalSearchFilterStatistics, num_calls_)>(
          reinterpret_cast<char*>(&num_calls_),
          reinterpret_cast<char*>(&other->num_calls_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LocalSearchStatistics_LocalSearchFilterStatistics::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_ortools_2fconstraint_5fsolver_2fsearch_5fstats_2eproto_getter, &descriptor_table_ortools_2fconstraint_5fsolver_2fsearch_5fstats_2eproto_once,
      file_level_metadata_ortools_2fconstraint_5fsolver_2fsearch_5fstats_2eproto[2]);
}

// ===================================================================

class LocalSearchStatistics::_Internal {
 public:
};

LocalSearchStatistics::LocalSearchStatistics(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  local_search_operator_statistics_(arena),
  local_search_filter_statistics_(arena),
  first_solution_statistics_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:operations_research.LocalSearchStatistics)
}
LocalSearchStatistics::LocalSearchStatistics(const LocalSearchStatistics& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      local_search_operator_statistics_(from.local_search_operator_statistics_),
      local_search_filter_statistics_(from.local_search_filter_statistics_),
      first_solution_statistics_(from.first_solution_statistics_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&total_num_neighbors_, &from.total_num_neighbors_,
    static_cast<size_t>(reinterpret_cast<char*>(&total_num_accepted_neighbors_) -
    reinterpret_cast<char*>(&total_num_neighbors_)) + sizeof(total_num_accepted_neighbors_));
  // @@protoc_insertion_point(copy_constructor:operations_research.LocalSearchStatistics)
}

inline void LocalSearchStatistics::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&total_num_neighbors_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&total_num_accepted_neighbors_) -
    reinterpret_cast<char*>(&total_num_neighbors_)) + sizeof(total_num_accepted_neighbors_));
}

LocalSearchStatistics::~LocalSearchStatistics() {
  // @@protoc_insertion_point(destructor:operations_research.LocalSearchStatistics)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void LocalSearchStatistics::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void LocalSearchStatistics::ArenaDtor(void* object) {
  LocalSearchStatistics* _this = reinterpret_cast< LocalSearchStatistics* >(object);
  (void)_this;
}
void LocalSearchStatistics::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LocalSearchStatistics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void LocalSearchStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:operations_research.LocalSearchStatistics)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  local_search_operator_statistics_.Clear();
  local_search_filter_statistics_.Clear();
  first_solution_statistics_.Clear();
  ::memset(&total_num_neighbors_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_num_accepted_neighbors_) -
      reinterpret_cast<char*>(&total_num_neighbors_)) + sizeof(total_num_accepted_neighbors_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LocalSearchStatistics::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .operations_research.LocalSearchStatistics.LocalSearchOperatorStatistics local_search_operator_statistics = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_local_search_operator_statistics(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .operations_research.LocalSearchStatistics.LocalSearchFilterStatistics local_search_filter_statistics = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_local_search_filter_statistics(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // int64 total_num_neighbors = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          total_num_neighbors_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 total_num_filtered_neighbors = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          total_num_filtered_neighbors_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 total_num_accepted_neighbors = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          total_num_accepted_neighbors_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .operations_research.LocalSearchStatistics.FirstSolutionStatistics first_solution_statistics = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_first_solution_statistics(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* LocalSearchStatistics::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:operations_research.LocalSearchStatistics)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .operations_research.LocalSearchStatistics.LocalSearchOperatorStatistics local_search_operator_statistics = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_local_search_operator_statistics_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_local_search_operator_statistics(i), target, stream);
  }

  // repeated .operations_research.LocalSearchStatistics.LocalSearchFilterStatistics local_search_filter_statistics = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_local_search_filter_statistics_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_local_search_filter_statistics(i), target, stream);
  }

  // int64 total_num_neighbors = 3;
  if (this->_internal_total_num_neighbors() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_total_num_neighbors(), target);
  }

  // int64 total_num_filtered_neighbors = 4;
  if (this->_internal_total_num_filtered_neighbors() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_total_num_filtered_neighbors(), target);
  }

  // int64 total_num_accepted_neighbors = 5;
  if (this->_internal_total_num_accepted_neighbors() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_total_num_accepted_neighbors(), target);
  }

  // repeated .operations_research.LocalSearchStatistics.FirstSolutionStatistics first_solution_statistics = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_first_solution_statistics_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, this->_internal_first_solution_statistics(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:operations_research.LocalSearchStatistics)
  return target;
}

size_t LocalSearchStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:operations_research.LocalSearchStatistics)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .operations_research.LocalSearchStatistics.LocalSearchOperatorStatistics local_search_operator_statistics = 1;
  total_size += 1UL * this->_internal_local_search_operator_statistics_size();
  for (const auto& msg : this->local_search_operator_statistics_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .operations_research.LocalSearchStatistics.LocalSearchFilterStatistics local_search_filter_statistics = 2;
  total_size += 1UL * this->_internal_local_search_filter_statistics_size();
  for (const auto& msg : this->local_search_filter_statistics_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .operations_research.LocalSearchStatistics.FirstSolutionStatistics first_solution_statistics = 6;
  total_size += 1UL * this->_internal_first_solution_statistics_size();
  for (const auto& msg : this->first_solution_statistics_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int64 total_num_neighbors = 3;
  if (this->_internal_total_num_neighbors() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_total_num_neighbors());
  }

  // int64 total_num_filtered_neighbors = 4;
  if (this->_internal_total_num_filtered_neighbors() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_total_num_filtered_neighbors());
  }

  // int64 total_num_accepted_neighbors = 5;
  if (this->_internal_total_num_accepted_neighbors() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_total_num_accepted_neighbors());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData LocalSearchStatistics::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    LocalSearchStatistics::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*LocalSearchStatistics::GetClassData() const { return &_class_data_; }

void LocalSearchStatistics::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<LocalSearchStatistics *>(to)->MergeFrom(
      static_cast<const LocalSearchStatistics &>(from));
}


void LocalSearchStatistics::MergeFrom(const LocalSearchStatistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:operations_research.LocalSearchStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  local_search_operator_statistics_.MergeFrom(from.local_search_operator_statistics_);
  local_search_filter_statistics_.MergeFrom(from.local_search_filter_statistics_);
  first_solution_statistics_.MergeFrom(from.first_solution_statistics_);
  if (from._internal_total_num_neighbors() != 0) {
    _internal_set_total_num_neighbors(from._internal_total_num_neighbors());
  }
  if (from._internal_total_num_filtered_neighbors() != 0) {
    _internal_set_total_num_filtered_neighbors(from._internal_total_num_filtered_neighbors());
  }
  if (from._internal_total_num_accepted_neighbors() != 0) {
    _internal_set_total_num_accepted_neighbors(from._internal_total_num_accepted_neighbors());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void LocalSearchStatistics::CopyFrom(const LocalSearchStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:operations_research.LocalSearchStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocalSearchStatistics::IsInitialized() const {
  return true;
}

void LocalSearchStatistics::InternalSwap(LocalSearchStatistics* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  local_search_operator_statistics_.InternalSwap(&other->local_search_operator_statistics_);
  local_search_filter_statistics_.InternalSwap(&other->local_search_filter_statistics_);
  first_solution_statistics_.InternalSwap(&other->first_solution_statistics_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LocalSearchStatistics, total_num_accepted_neighbors_)
      + sizeof(LocalSearchStatistics::total_num_accepted_neighbors_)
      - PROTOBUF_FIELD_OFFSET(LocalSearchStatistics, total_num_neighbors_)>(
          reinterpret_cast<char*>(&total_num_neighbors_),
          reinterpret_cast<char*>(&other->total_num_neighbors_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LocalSearchStatistics::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_ortools_2fconstraint_5fsolver_2fsearch_5fstats_2eproto_getter, &descriptor_table_ortools_2fconstraint_5fsolver_2fsearch_5fstats_2eproto_once,
      file_level_metadata_ortools_2fconstraint_5fsolver_2fsearch_5fstats_2eproto[3]);
}

// ===================================================================

class ConstraintSolverStatistics::_Internal {
 public:
};

ConstraintSolverStatistics::ConstraintSolverStatistics(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:operations_research.ConstraintSolverStatistics)
}
ConstraintSolverStatistics::ConstraintSolverStatistics(const ConstraintSolverStatistics& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&num_branches_, &from.num_branches_,
    static_cast<size_t>(reinterpret_cast<char*>(&duration_seconds_) -
    reinterpret_cast<char*>(&num_branches_)) + sizeof(duration_seconds_));
  // @@protoc_insertion_point(copy_constructor:operations_research.ConstraintSolverStatistics)
}

inline void ConstraintSolverStatistics::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&num_branches_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&duration_seconds_) -
    reinterpret_cast<char*>(&num_branches_)) + sizeof(duration_seconds_));
}

ConstraintSolverStatistics::~ConstraintSolverStatistics() {
  // @@protoc_insertion_point(destructor:operations_research.ConstraintSolverStatistics)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void ConstraintSolverStatistics::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ConstraintSolverStatistics::ArenaDtor(void* object) {
  ConstraintSolverStatistics* _this = reinterpret_cast< ConstraintSolverStatistics* >(object);
  (void)_this;
}
void ConstraintSolverStatistics::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ConstraintSolverStatistics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void ConstraintSolverStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:operations_research.ConstraintSolverStatistics)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&num_branches_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&duration_seconds_) -
      reinterpret_cast<char*>(&num_branches_)) + sizeof(duration_seconds_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ConstraintSolverStatistics::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 num_branches = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          num_branches_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 num_failures = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          num_failures_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 num_solutions = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          num_solutions_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 bytes_used = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          bytes_used_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // double duration_seconds = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 41)) {
          duration_seconds_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ConstraintSolverStatistics::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:operations_research.ConstraintSolverStatistics)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 num_branches = 1;
  if (this->_internal_num_branches() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_num_branches(), target);
  }

  // int64 num_failures = 2;
  if (this->_internal_num_failures() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_num_failures(), target);
  }

  // int64 num_solutions = 3;
  if (this->_internal_num_solutions() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_num_solutions(), target);
  }

  // int64 bytes_used = 4;
  if (this->_internal_bytes_used() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_bytes_used(), target);
  }

  // double duration_seconds = 5;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_duration_seconds = this->_internal_duration_seconds();
  uint64_t raw_duration_seconds;
  memcpy(&raw_duration_seconds, &tmp_duration_seconds, sizeof(tmp_duration_seconds));
  if (raw_duration_seconds != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(5, this->_internal_duration_seconds(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:operations_research.ConstraintSolverStatistics)
  return target;
}

size_t ConstraintSolverStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:operations_research.ConstraintSolverStatistics)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 num_branches = 1;
  if (this->_internal_num_branches() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_num_branches());
  }

  // int64 num_failures = 2;
  if (this->_internal_num_failures() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_num_failures());
  }

  // int64 num_solutions = 3;
  if (this->_internal_num_solutions() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_num_solutions());
  }

  // int64 bytes_used = 4;
  if (this->_internal_bytes_used() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64SizePlusOne(this->_internal_bytes_used());
  }

  // double duration_seconds = 5;
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_duration_seconds = this->_internal_duration_seconds();
  uint64_t raw_duration_seconds;
  memcpy(&raw_duration_seconds, &tmp_duration_seconds, sizeof(tmp_duration_seconds));
  if (raw_duration_seconds != 0) {
    total_size += 1 + 8;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ConstraintSolverStatistics::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    ConstraintSolverStatistics::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ConstraintSolverStatistics::GetClassData() const { return &_class_data_; }

void ConstraintSolverStatistics::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<ConstraintSolverStatistics *>(to)->MergeFrom(
      static_cast<const ConstraintSolverStatistics &>(from));
}


void ConstraintSolverStatistics::MergeFrom(const ConstraintSolverStatistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:operations_research.ConstraintSolverStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_num_branches() != 0) {
    _internal_set_num_branches(from._internal_num_branches());
  }
  if (from._internal_num_failures() != 0) {
    _internal_set_num_failures(from._internal_num_failures());
  }
  if (from._internal_num_solutions() != 0) {
    _internal_set_num_solutions(from._internal_num_solutions());
  }
  if (from._internal_bytes_used() != 0) {
    _internal_set_bytes_used(from._internal_bytes_used());
  }
  static_assert(sizeof(uint64_t) == sizeof(double), "Code assumes uint64_t and double are the same size.");
  double tmp_duration_seconds = from._internal_duration_seconds();
  uint64_t raw_duration_seconds;
  memcpy(&raw_duration_seconds, &tmp_duration_seconds, sizeof(tmp_duration_seconds));
  if (raw_duration_seconds != 0) {
    _internal_set_duration_seconds(from._internal_duration_seconds());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ConstraintSolverStatistics::CopyFrom(const ConstraintSolverStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:operations_research.ConstraintSolverStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConstraintSolverStatistics::IsInitialized() const {
  return true;
}

void ConstraintSolverStatistics::InternalSwap(ConstraintSolverStatistics* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ConstraintSolverStatistics, duration_seconds_)
      + sizeof(ConstraintSolverStatistics::duration_seconds_)
      - PROTOBUF_FIELD_OFFSET(ConstraintSolverStatistics, num_branches_)>(
          reinterpret_cast<char*>(&num_branches_),
          reinterpret_cast<char*>(&other->num_branches_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ConstraintSolverStatistics::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_ortools_2fconstraint_5fsolver_2fsearch_5fstats_2eproto_getter, &descriptor_table_ortools_2fconstraint_5fsolver_2fsearch_5fstats_2eproto_once,
      file_level_metadata_ortools_2fconstraint_5fsolver_2fsearch_5fstats_2eproto[4]);
}

// ===================================================================

class SearchStatistics::_Internal {
 public:
  static const ::operations_research::LocalSearchStatistics& local_search_statistics(const SearchStatistics* msg);
  static const ::operations_research::ConstraintSolverStatistics& constraint_solver_statistics(const SearchStatistics* msg);
};

const ::operations_research::LocalSearchStatistics&
SearchStatistics::_Internal::local_search_statistics(const SearchStatistics* msg) {
  return *msg->local_search_statistics_;
}
const ::operations_research::ConstraintSolverStatistics&
SearchStatistics::_Internal::constraint_solver_statistics(const SearchStatistics* msg) {
  return *msg->constraint_solver_statistics_;
}
SearchStatistics::SearchStatistics(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:operations_research.SearchStatistics)
}
SearchStatistics::SearchStatistics(const SearchStatistics& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_local_search_statistics()) {
    local_search_statistics_ = new ::operations_research::LocalSearchStatistics(*from.local_search_statistics_);
  } else {
    local_search_statistics_ = nullptr;
  }
  if (from._internal_has_constraint_solver_statistics()) {
    constraint_solver_statistics_ = new ::operations_research::ConstraintSolverStatistics(*from.constraint_solver_statistics_);
  } else {
    constraint_solver_statistics_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:operations_research.SearchStatistics)
}

inline void SearchStatistics::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&local_search_statistics_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&constraint_solver_statistics_) -
    reinterpret_cast<char*>(&local_search_statistics_)) + sizeof(constraint_solver_statistics_));
}

SearchStatistics::~SearchStatistics() {
  // @@protoc_insertion_point(destructor:operations_research.SearchStatistics)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void SearchStatistics::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete local_search_statistics_;
  if (this != internal_default_instance()) delete constraint_solver_statistics_;
}

void SearchStatistics::ArenaDtor(void* object) {
  SearchStatistics* _this = reinterpret_cast< SearchStatistics* >(object);
  (void)_this;
}
void SearchStatistics::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SearchStatistics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void SearchStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:operations_research.SearchStatistics)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && local_search_statistics_ != nullptr) {
    delete local_search_statistics_;
  }
  local_search_statistics_ = nullptr;
  if (GetArenaForAllocation() == nullptr && constraint_solver_statistics_ != nullptr) {
    delete constraint_solver_statistics_;
  }
  constraint_solver_statistics_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SearchStatistics::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .operations_research.LocalSearchStatistics local_search_statistics = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_local_search_statistics(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .operations_research.ConstraintSolverStatistics constraint_solver_statistics = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_constraint_solver_statistics(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SearchStatistics::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:operations_research.SearchStatistics)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .operations_research.LocalSearchStatistics local_search_statistics = 1;
  if (this->_internal_has_local_search_statistics()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::local_search_statistics(this), target, stream);
  }

  // .operations_research.ConstraintSolverStatistics constraint_solver_statistics = 2;
  if (this->_internal_has_constraint_solver_statistics()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::constraint_solver_statistics(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:operations_research.SearchStatistics)
  return target;
}

size_t SearchStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:operations_research.SearchStatistics)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .operations_research.LocalSearchStatistics local_search_statistics = 1;
  if (this->_internal_has_local_search_statistics()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *local_search_statistics_);
  }

  // .operations_research.ConstraintSolverStatistics constraint_solver_statistics = 2;
  if (this->_internal_has_constraint_solver_statistics()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *constraint_solver_statistics_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SearchStatistics::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    SearchStatistics::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SearchStatistics::GetClassData() const { return &_class_data_; }

void SearchStatistics::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<SearchStatistics *>(to)->MergeFrom(
      static_cast<const SearchStatistics &>(from));
}


void SearchStatistics::MergeFrom(const SearchStatistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:operations_research.SearchStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_local_search_statistics()) {
    _internal_mutable_local_search_statistics()->::operations_research::LocalSearchStatistics::MergeFrom(from._internal_local_search_statistics());
  }
  if (from._internal_has_constraint_solver_statistics()) {
    _internal_mutable_constraint_solver_statistics()->::operations_research::ConstraintSolverStatistics::MergeFrom(from._internal_constraint_solver_statistics());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SearchStatistics::CopyFrom(const SearchStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:operations_research.SearchStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchStatistics::IsInitialized() const {
  return true;
}

void SearchStatistics::InternalSwap(SearchStatistics* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SearchStatistics, constraint_solver_statistics_)
      + sizeof(SearchStatistics::constraint_solver_statistics_)
      - PROTOBUF_FIELD_OFFSET(SearchStatistics, local_search_statistics_)>(
          reinterpret_cast<char*>(&local_search_statistics_),
          reinterpret_cast<char*>(&other->local_search_statistics_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SearchStatistics::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_ortools_2fconstraint_5fsolver_2fsearch_5fstats_2eproto_getter, &descriptor_table_ortools_2fconstraint_5fsolver_2fsearch_5fstats_2eproto_once,
      file_level_metadata_ortools_2fconstraint_5fsolver_2fsearch_5fstats_2eproto[5]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace operations_research
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::operations_research::LocalSearchStatistics_FirstSolutionStatistics* Arena::CreateMaybeMessage< ::operations_research::LocalSearchStatistics_FirstSolutionStatistics >(Arena* arena) {
  return Arena::CreateMessageInternal< ::operations_research::LocalSearchStatistics_FirstSolutionStatistics >(arena);
}
template<> PROTOBUF_NOINLINE ::operations_research::LocalSearchStatistics_LocalSearchOperatorStatistics* Arena::CreateMaybeMessage< ::operations_research::LocalSearchStatistics_LocalSearchOperatorStatistics >(Arena* arena) {
  return Arena::CreateMessageInternal< ::operations_research::LocalSearchStatistics_LocalSearchOperatorStatistics >(arena);
}
template<> PROTOBUF_NOINLINE ::operations_research::LocalSearchStatistics_LocalSearchFilterStatistics* Arena::CreateMaybeMessage< ::operations_research::LocalSearchStatistics_LocalSearchFilterStatistics >(Arena* arena) {
  return Arena::CreateMessageInternal< ::operations_research::LocalSearchStatistics_LocalSearchFilterStatistics >(arena);
}
template<> PROTOBUF_NOINLINE ::operations_research::LocalSearchStatistics* Arena::CreateMaybeMessage< ::operations_research::LocalSearchStatistics >(Arena* arena) {
  return Arena::CreateMessageInternal< ::operations_research::LocalSearchStatistics >(arena);
}
template<> PROTOBUF_NOINLINE ::operations_research::ConstraintSolverStatistics* Arena::CreateMaybeMessage< ::operations_research::ConstraintSolverStatistics >(Arena* arena) {
  return Arena::CreateMessageInternal< ::operations_research::ConstraintSolverStatistics >(arena);
}
template<> PROTOBUF_NOINLINE ::operations_research::SearchStatistics* Arena::CreateMaybeMessage< ::operations_research::SearchStatistics >(Arena* arena) {
  return Arena::CreateMessageInternal< ::operations_research::SearchStatistics >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
